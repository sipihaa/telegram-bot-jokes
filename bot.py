import random
import boto3
import logging
from telegram import Update
from telegram.ext import ApplicationBuilder, CommandHandler, ContextTypes

from yandexcloud import SDK  # –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å Lockbox

# ID —Å–µ–∫—Ä–µ—Ç–∞ Lockbox (—Å–∫–æ–ø–∏—Ä—É–π –µ–≥–æ –∏–∑ –∫–æ–Ω—Å–æ–ª–∏ Yandex Cloud)
SECRET_ID = 'e6qdpuv6kan6vgr4qdcv'
BUCKET_NAME = 'facts-jokes-for-tg-bot'
ENDPOINT = 'https://storage.yandexcloud.net'


def get_secrets_from_lockbox(secret_id: str):
    sdk = SDK()  # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç IAM-—Å–µ—Ä–≤–∏—Å–Ω—ã–π –∞–∫–∫–∞—É–Ω—Ç –≤–Ω—É—Ç—Ä–∏ –í–ú
    client = sdk.client('lockbox_payload')
    response = client.get_payload(secret_id=secret_id)

    access_key = None
    secret_key = None

    for entry in response.entries:
        if entry.key == 'access_key':
            access_key = entry.text_value
        elif entry.key == 'secret_key':
            secret_key = entry.text_value

    if not access_key or not secret_key:
        raise ValueError("–ö–ª—é—á–∏ –¥–æ—Å—Ç—É–ø–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ Lockbox")

    return access_key, secret_key


def get_random_line_from_s3(s3, filename):
    obj = s3.get_object(Bucket=BUCKET_NAME, Key=filename)
    lines = obj['Body'].read().decode('utf-8').split('\n')
    lines = [line.strip() for line in lines if line.strip()]
    return random.choice(lines)


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "–ü—Ä–∏–≤–µ—Ç! –Ø –ë–æ—Ç –ù–∞—Å—Ç—Ä–æ–µ–Ω–∏—è ü§ñ\n"
        "–ö–æ–º–∞–Ω–¥—ã:\n"
        "/fact ‚Äî –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π —Ñ–∞–∫—Ç\n"
        "/joke ‚Äî –∞–Ω–µ–∫–¥–æ—Ç"
    )


async def fact(update: Update, context: ContextTypes.DEFAULT_TYPE):
    fact = get_random_line_from_s3(context.bot_data['s3'], 'facts.txt')
    await update.message.reply_text(f"üß† –§–∞–∫—Ç: {fact}")


async def joke(update: Update, context: ContextTypes.DEFAULT_TYPE):
    joke = get_random_line_from_s3(context.bot_data['s3'], 'jokes.txt')
    await update.message.reply_text(f"üòÇ –ê–Ω–µ–∫–¥–æ—Ç: {joke}")


if __name__ == '__main__':
    logging.basicConfig(level=logging.INFO)

    # –ü–æ–ª—É—á–∞–µ–º –∫–ª—é—á–∏ –∏–∑ Lockbox
    access_key, secret_key = get_secrets_from_lockbox(SECRET_ID)

    # –°–æ–∑–¥–∞—ë–º –∫–ª–∏–µ–Ω—Ç–∞ –¥–ª—è Yandex Object Storage
    s3 = boto3.client(
        service_name='s3',
        endpoint_url=ENDPOINT,
        aws_access_key_id=access_key,
        aws_secret_access_key=secret_key
    )

    # –ü–æ–ª—É—á–∞–µ–º Telegram-—Ç–æ–∫–µ–Ω –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è
    import os
    TELEGRAM_TOKEN = os.getenv('TELEGRAM_TOKEN')
    if not TELEGRAM_TOKEN:
        raise RuntimeError("–ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è TELEGRAM_TOKEN –Ω–µ –∑–∞–¥–∞–Ω–∞")

    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram-–±–æ—Ç–∞
    app = ApplicationBuilder().token(TELEGRAM_TOKEN).build()

    # –ü–µ—Ä–µ–¥–∞—ë–º –æ–±—ä–µ–∫—Ç s3 –≤–æ –≤—Å–µ —Ö–µ–Ω–¥–ª–µ—Ä—ã —á–µ—Ä–µ–∑ context.bot_data
    app.bot_data['s3'] = s3

    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("fact", fact))
    app.add_handler(CommandHandler("joke", joke))

    logging.info("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    app.run_polling()
